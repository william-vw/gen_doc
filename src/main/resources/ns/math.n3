# Schema for CWM's mathematical built-ins, SBP 2001-12
#
# $Id: math.n3,v 1.12 2010-03-30 15:18:08 timbl Exp $

@prefix owl: <http://www.w3.org/2002/07/owl#>.

@prefix cc: <http://creativecommons.org/ns#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix math: <http://www.w3.org/2000/10/swap/math#> .
@prefix string: <http://www.w3.org/2000/10/swap/string#> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .

<>  rdfs:label "Schema mathematical built-in functions";
    rdfs:comment """This is an ontology for computable math functions.""";
    cc:license <http://www.w3.org/Consortium/Legal/copyright-software> .

math:StrictProperty a rdfs:Class;
    rdfs:label "StrictProperty";
    rdfs:subClassOf rdf:Property;
    rdfs:comment "The class of things that compare values.".

math:Value a rdfs:Class; rdfs:label "Value"; 
   rdfs:subClassOf [owl:unionOf (xsd:decimal xsd:float xsd:double)]; 
   rdfs:comment "The class of things that derive from XSD numeric datatypes." .

math:Function a rdfs:Class;
   rdfs:subClassOf owl:FunctionalProperty;
   rdfs:label "Function";
   rdfs:comment "A math:Function is unique in terms of math:EqualTo. ".

math:ReverseFunction a rdfs:Class;
   rdfs:subClassOf owl:InverseFunctionalProperty;
   rdfs:comment "A math:ReverseFunction is unambiguous in terms of math:EqualTo. ".

math:LogicalOperator a rdfs:Class; rdfs:subClassOf math:Function, math:ReverseFunction;
   rdfs:comment """A logical operator allows evaluation eihter way, or testing relationship
between two values""".

math:List a rdfs:Class; rdfs:label "List"; 
   rdfs:subClassOf log:List; 
   rdfs:comment """The class of things that are N3 lists where all of the 
members are math:Value items.""".

math:TwoMemberedList a rdfs:Class; rdfs:label "TwoMemberedList"; 
   rdfs:subClassOf math:List; 
   rdfs:comment "This is the class of things that are math lists with only two members." .

math:memberCount a rdf:Property, math:Function; rdfs:label "memberCount"; 
   rdfs:domain math:List; rdfs:range math:Value; 
   rdfs:comment """The number of items in a list. The subject is a list,
the object is calculated as the number of members.
Obsolete, see list:length""";
   vs:term_status "deprecated".


# Logical operators:

math:greaterThan a rdf:Property, math:StrictProperty;
   rdfs:label "greaterThan"; 
   rdfs:comment """`true` if and only if the subject is a number which is greater than the object.""";
   rdfs:domain math:Value; rdfs:range math:Value .

math:notGreaterThan a rdf:Property, math:StrictProperty;
    rdfs:label "notGreaterThan"; 
    rdfs:comment """`true` if and only if the subject is a number which is NOT greater than the object.""";
    rdfs:domain math:Value; rdfs:range math:Value .

math:lessThan a rdf:Property, math:StrictProperty;
   rdfs:label "lessThan"; 
   rdfs:comment """`true` if and only if the subject is a number which is LESS than a object.""";
   rdfs:domain math:Value; rdfs:range math:Value .

math:notLessThan a rdf:Property, math:StrictProperty;
   rdfs:label "notlessThan"; 
   rdfs:comment """`true` if and only if the subject is a number which is NOT LESS than a object.""";
   rdfs:domain math:Value; rdfs:range math:Value .

math:equalTo a rdf:Property, math:StrictProperty;
   rdfs:label "equalTo"; 
   rdfs:comment """Checks equality of numbers.
   
`true` if and only if `$s` is equal to `$o`.""";
   rdfs:domain math:Value; rdfs:range math:Value .

math:notEqualTo a rdf:Property, math:StrictProperty;
   rdfs:label "notEqualTo"; 
   rdfs:comment """`true` if and only if the subject is a number which is NOT EQUAL to a object.""";
   rdfs:domain math:Value; rdfs:range math:Value .

math:sum a rdf:Property, math:Function;
    rdfs:label "sum";
    rdfs:domain log:List;
    rdfs:range math:Value;
    rdfs:comment """Performs addition of numbers. 

`true` if and only if the arithmetic sum of `$s_1, .. $s_n` equals `$o`.""".

math:difference a rdf:Property, math:Function;
    rdfs:label "difference";
    rdfs:domain math:TwoMemberedList;
    rdfs:range math:Value;
    rdfs:comment """The subject is a pair of numbers. The object
is calculated by subtracting the second number of the pair from the first.
""".

math:product a rdf:Property, math:Function;
    rdfs:label "product";
    rdfs:domain math:List;
    rdfs:range math:Value;
    rdfs:comment """The subject is a list of numbers.
The object is calculated as the arithmentic product of those numbers.
""".

math:quotient a rdf:Property, math:Function;
    rdfs:label "quotient";
    rdfs:domain math:TwoMemberedList;
    rdfs:range math:Value;
    rdfs:comment """The subject is a pair of numbers. The object
is calculated by dividing the first number of the pair by the second.
""".

math:integerQuotient a rdf:Property, math:Function;
    rdfs:label "integerQuotient";
    vs:term_status "deprecated";
    rdfs:domain math:TwoMemberedList;
    rdfs:range math:Value;
    rdfs:comment """The subject is a pair of numbers. The object
is calculated by dividing the first number of the pair by the second, ignoring remainder.
""".

math:remainder a rdf:Property, math:Function;
    rdfs:label "remainder";
    rdfs:domain math:TwoMemberedList;
    rdfs:range math:Value;
    rdfs:comment """The subject is a pair of integers. The object
is calculated by dividing the first number of the pair by the second and taking the remainder.
""".

math:exponentiation a rdf:Property, math:Function;
    rdfs:label "exponentiation";
    rdfs:domain math:TwoMemberedList;
    rdfs:range math:Value;
    rdfs:comment """The subject is a pair of numbers. The object
is calculated by raising the first number of the power of the second.
""".

math:negation a rdf:Property, math:Function;
    rdfs:label "negation";
    rdfs:domain math:Value;
    rdfs:range math:Value;
    rdfs:comment """The subject or object is calculated to be the negation of the other.""".

math:absoluteValue a rdf:Property, math:Function;
    rdfs:label "negation";
    rdfs:domain math:Value;
    rdfs:range math:Value;
    rdfs:comment """The object is calulated as the absolute value of the subject.""".

math:rounded a rdf:Property, math:Function;
    rdfs:label "rounded";
    rdfs:domain math:Value;
    rdfs:range math:Value;
    rdfs:comment """The object is calulated as the number with no fractional part that is closest to the subject.
If there are two such numbers, then the one that is closest to positive infinity is returned.
""".

# 
# Here start the trigonometric functions - karl dubost
#
#  Inverse functions are implemented by using the function backwards
#  eg for  x math:asin y   say   x is math:sin of y

math:acos a rdf:Property;
   rdfs:label "acos";
   rdfs:range math:Value;
   rdfs:domain math:Value;
   rdfs:comment
"""The object is calulated as the arc cosine value of the subject.""".

math:asin a rdf:Property;
   rdfs:label "asin";
   rdfs:range math:Value;
   rdfs:domain math:Value;
   rdfs:comment
"""The object is calulated as the arc sine value of the subject.""".

math:atan a rdf:Property;
   rdfs:label "atan";
   rdfs:range math:Value;
   rdfs:domain math:Value;
   rdfs:comment
"""The object is calulated as the arc tangent value of the subject.""".

math:atan2 a math:Function;
   rdfs:label "atan2";
   rdfs:range math:Value;
   rdfs:domain math:Value;
   rdfs:comment
"""The subject is a pair of numbers. The object is calulated as the arc tangent value of the ratio of the two subject values.""".

math:cos a rdf:Property, math:LogicalOperator;
    rdfs:label "cos";
    rdfs:domain math:Value;
    rdfs:range math:Value;
    rdfs:comment """The subject is an angle expressed in radians.
The object is calulated as the cosine value of the subject.""".

math:cosh a rdf:Property, math:LogicalOperator;
    rdfs:label "cosh";
    rdfs:domain math:Value;
    rdfs:range math:Value;
    rdfs:comment """The subject is an angle expressed in radians.
The object is calulated as the #hyperbolic cosine value of the subject.""".

math:degrees a rdf:Property, math:LogicalOperator;
    rdfs:label "degrees";
    rdfs:domain math:Value;
    rdfs:range math:Value;
    rdfs:comment """The subject is an angle expressed in radians.
The object is calulated as the conversion in degrees of the value of the subject.""".

math:sin a rdf:Property, math:LogicalOperator;
    rdfs:label "sin";
    rdfs:domain math:Value;
    rdfs:range math:Value;
    rdfs:comment """The subject is an angle expressed in radians.
The object is calulated as the sine value of the subject.""".

math:sinh a rdf:Property, math:LogicalOperator;
    rdfs:label "sinh";
    rdfs:domain math:Value;
    rdfs:range math:Value;
    rdfs:comment """The subject is an angle expressed in radians.
The object is calulated as the hyperbolic sine value of the subject.""".

math:tan a rdf:Property, math:LogicalOperator;
    rdfs:label "tan";
    rdfs:domain math:Value;
    rdfs:range math:Value;
    rdfs:comment """The subject is an angle expressed in radians.
The object is calulated as the tangent value of the subject.""".

math:tanh a rdf:Property, math:LogicalOperator;
    rdfs:label "tanh";
    rdfs:domain math:Value;
    rdfs:range math:Value;
    rdfs:comment """The subject is an angle expressed in radians.
The object is calulated as the hyperbolic tangent value of the subject.""".


#ends

